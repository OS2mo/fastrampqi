# SPDX-FileCopyrightText: 2022 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

stages:
  - lint
  - build
  - test
  - coverage
  - release


variables:
  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}

  PYTEST_COV_MODULE: fastramqpi
  PYTEST_COV_FAIL_UNDER: 100

  PRECOMMIT_USE_POETRY: "true"
  POETRY_VERSION: "1.3.1"



# Conditions
#############
.if-default-branch-refs: &if-default-branch-refs
  if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'

.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'

# Workflow
###########
workflow:
  rules:
    - <<: *if-tag
    - <<: *if-default-branch-refs
    - <<: *if-merge-request


include:
  - project: labs/salt-automation
    ref: master
    file: gitlab-ci-templates/common/conventional-commits.v1.yml
  - project: labs/salt-automation
    ref: master
    file: /gitlab-ci-templates/common/pre-commit.v1.yml
  - project: labs/salt-automation
    ref: master
    file: gitlab-ci-templates/python/pytest.v1.yml
  - project: labs/salt-automation
    ref: master
    file: gitlab-ci-templates/common/rules.v1.yml


Release to PyPI:
  extends:
    - .rules:semver-core
  stage: release
  needs: []
  image: python:3-slim
  variables:
    POETRY_VIRTUALENVS_CREATE: "false"
    POETRY_VIRTUALENVS_IN_PROJECT: "false"
  before_script:
    - pip install --no-cache-dir poetry
  script:
    - sed -i "s/^version = .*$/version = \"${CI_COMMIT_TAG}\"/g" pyproject.toml
    - poetry publish --build --no-interaction --username __token__ --password ${PYPI_TOKEN}
